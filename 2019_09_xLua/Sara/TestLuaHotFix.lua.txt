callback = nil

xlua.hotfix(CS.WrongFuncs, 'PickMin', function(self, arr)
    local a = arr.Length
    local min = arr[0]
    for i=0, a-1, 1 do
        min = CS.UnityEngine.Mathf.Min(min, arr[i])
    end
    return min
end)

xlua.hotfix(CS.WrongFuncs, 'CalDamageFunc', function(self, OriDamage)
    if(OriDamage < 10000)
    then 
        OriDamage = OriDamage * self._multiper
    end
    return OriDamage
end)

xlua.hotfix(CS.WrongFuncs, 'TempActiveAttackUp', function(self, multiplier)
    self._multiper = multiplier
    callback = function(damage) 
          return self.CalDamageFunc(self, damage)
    end
    CS.CalDamageInstance.calDamageEvent('+', callback)
end)


xlua.hotfix(CS.WrongFuncs, "TempDeactiveAttackUp", function(self)
     CS.CalDamageInstance.calDamageEvent('-', callback)
end)


